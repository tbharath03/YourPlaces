{"version":3,"file":"static/js/420.a1f2975c.chunk.js","mappings":"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","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js"],"sourcesContent":["import React, {useRef, useEffect} from \"react\";\n\nimport './Map.css';\n\nconst Map = props => {\n    const mapRef = useRef(); \n\n    const {center, zoom} = props;\n\n    useEffect(() => {\n        const map = new window.google.maps.Map(mapRef.current, {\n            center : center,\n            zoom : zoom\n        });\n    \n        new window.google.maps.Marker({position : center, map : map});\n    },[center, zoom]);\n\n    \n\n    return <div ref={mapRef} className={`map ${props.className}`} style={props.style}></div>\n};\n\nexport default Map;","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport \"./PlaceItem.css\";\n\nconst PlaceItem = (props) => {\n    const auth = useContext(AuthContext);\n    const [showMap, setShowMap] = useState(false);\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    const openMapHandler = () => setShowMap(true);\n    const closeMapHandler = () => setShowMap(false);\n\n    const showDeleteWarningHandler = () => setShowConfirmModal(true);\n    const cancelDeleteWarningHandler = () => setShowConfirmModal(false);\n\n    const confirmDeleteHandler = async () => {\n        setShowConfirmModal(false);\n        try {\n            await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n                \"DELETE\",\n                null,\n                { Authorization: \"Bearer \" + auth.token }\n            );\n            props.onDelete(props.id);\n        } catch (err) {}\n    };\n\n    return (\n        <>\n            <ErrorModal error={error} onClear={clearError} />\n            <Modal\n                show={showMap}\n                onCancel={closeMapHandler}\n                header={props.address}\n                contentClass=\"place-item__modal-content\"\n                footerClass=\"place-item__modal-actions\"\n                footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n            >\n                <div className=\"map-container\">\n                    <Map center={props.coordinates} zoom={16} />\n                </div>\n            </Modal>\n            <Modal\n                show={showConfirmModal}\n                onCancel={cancelDeleteWarningHandler}\n                header=\"Are you sure?\"\n                footerClass=\"plce-item__modal-actions\"\n                footer={\n                    <>\n                        <Button inverse onClick={cancelDeleteWarningHandler}>\n                            CANCEL\n                        </Button>\n                        <Button danger onClick={confirmDeleteHandler}>\n                            DELETE\n                        </Button>\n                    </>\n                }\n            >\n                <p>\n                    Do you want to proceed and delete this place? Please note\n                    that it can't be undone thereafter.\n                </p>\n            </Modal>\n            <li className=\"place-item\">\n                <Card className=\"place-item__content\">\n                    {isLoading && <LoadingSpinner asOverlay />}\n                    <div className=\"place-item__image\">\n                        <img\n                            src={`${process.env.REACT_APP_ASSET_URL}${props.image}`}\n                            alt={props.title}\n                        />\n                    </div>\n                    <div className=\"place-item__info\">\n                        <h2>{props.title}</h2>\n                        <h3>{props.address}</h3>\n                        <p>{props.description}</p>\n                    </div>\n                    <div className=\"place-item__actions\">\n                        <Button inverse onClick={openMapHandler}>\n                            VIEW ON MAP\n                        </Button>\n                        {auth.userId === props.creatorId && (\n                            <Button to={`/places/${props.id}`}>EDIT</Button>\n                        )}\n                        {auth.userId === props.creatorId && (\n                            <Button danger onClick={showDeleteWarningHandler}>\n                                DELETE\n                            </Button>\n                        )}\n                    </div>\n                </Card>\n            </li>\n        </>\n    );\n};\n\nexport default PlaceItem;\n","import React, { useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport \"./PlaceList.css\";\nimport PlaceItem from \"./PlaceItem\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst PlaceList = (props) => {\n    const auth = useContext(AuthContext);\n    if (props.items.length === 0) {\n        return (\n            <div className=\"place-list center\">\n                <Card>\n                    {auth.userId === props.id && (\n                        <>\n                            <h2>No places found. Maybe create one?</h2>\n                            <Button to=\"/places/new\">Share Place</Button>\n                        </>\n                    )}\n                    {auth.userId !== props.id && <h2>No places found.</h2>}\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <ul className=\"place-list\">\n            {props.items.map((place) => (\n                <PlaceItem\n                    key={place.id}\n                    id={place.id}\n                    image={place.image}\n                    title={place.title}\n                    description={place.description}\n                    address={place.address}\n                    creatorId={place.creator}\n                    coordinates={place.location}\n                    onDelete={props.onDeletePlace}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\nimport PlaceList from \"../components/PlaceList\";\n// import ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst UserPlaces = () => {\n    const [loadedPlaces, setLoadedPlaces] = useState();\n    const userId = useParams().userId;\n    const { isLoading, sendRequest } = useHttpClient();\n    useEffect(() => {\n        const fetchPlaces = async () => {\n            try {\n                const responeData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n                );\n                setLoadedPlaces(responeData.places);\n            } catch (err) {}\n        };\n        fetchPlaces();\n    }, [sendRequest, userId]);\n\n    const placeDeletedHandler = (deletedPlaceId) => {\n        setLoadedPlaces((prevPlaces) =>\n            prevPlaces.filter((place) => place.id !== deletedPlaceId)\n        );\n    };\n\n    return (\n        <>\n            {/* <ErrorModal error={error} onClear={clearError} /> */}\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedPlaces && (\n                <PlaceList\n                    items={loadedPlaces}\n                    onDeletePlace={placeDeletedHandler}\n                />\n            )}\n        </>\n    );\n};\n\nexport default UserPlaces;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n    if (props.href) {\n        return (\n            <a\n                className={`button button--${props.size || \"default\"} ${\n                    props.inverse && \"button--inverse\"\n                } ${props.danger && \"button--danger\"}`}\n                href={props.href}\n            >\n                {props.children}\n            </a>\n        );\n    }\n    if (props.to) {\n        return (\n            <Link\n                to={props.to}\n                exact={props.exact}\n                className={`button button--${props.size || \"default\"} ${\n                    props.inverse && \"button--inverse\"\n                } ${props.danger && \"button--danger\"}`}\n            >\n                {props.children}\n            </Link>\n        );\n    }\n    return (\n        <button\n            className={`button button--${props.size || \"default\"} ${\n                props.inverse && \"button--inverse\"\n            } ${props.danger && \"button--danger\"}`}\n            type={props.type}\n            onClick={props.onClick}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport {CSSTransition} from 'react-transition-group';\n\nimport Backdrop from \"./Backdrop\";\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : event => event.preventDefault()}>\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n                <footer className={`modal__footer ${props.footerClass}`}>\n                    {props.footer}\n                </footer>\n            </form>\n        </div>\n    );\n\n    return ReactDOM.createPortal(content,document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = props => {\n    return <>\n        {props.show && <Backdrop onClick = {props.onCancel}/>}\n        <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\n            <ModalOverlay {...props}/>\n        </CSSTransition>\n    </>\n};\n\nexport default Modal;","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState();\n    const activeHttpRequests = useRef([]);\n\n    const sendRequest = useCallback(\n        async (url, method = \"GET\", body = null, headers = {}) => {\n            setIsLoading(true);\n            const httpAbortCntrl = new AbortController();\n            activeHttpRequests.current.push(httpAbortCntrl);\n            try {\n                const response = await fetch(url, {\n                    method,\n                    body,\n                    headers,\n                    signal: httpAbortCntrl.signal,\n                });\n\n                const responseData = await response.json();\n\n                activeHttpRequests.current = activeHttpRequests.current.filter(\n                    (reqCtrl) => reqCtrl !== httpAbortCntrl\n                );\n\n                if (!response.ok) {\n                    throw new Error(responseData.message);\n                }\n                setIsLoading(false);\n                return responseData;\n            } catch (err) {\n                setError(err.message);\n                setIsLoading(false);\n                throw err;\n            }\n        },\n        []\n    );\n    const clearError = () => {\n        setError(null);\n    };\n\n    useEffect(() => {\n        return () => {\n            activeHttpRequests.current.forEach((abortCntrl) =>\n                abortCntrl.abort()\n            );\n        };\n    }, []);\n\n    return { isLoading, error, sendRequest, clearError };\n};\n"],"names":["props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","Map","current","Marker","position","_jsx","ref","className","concat","style","auth","useContext","AuthContext","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","isLoading","error","sendRequest","clearError","useHttpClient","closeMapHandler","cancelDeleteWarningHandler","_jsxs","_Fragment","children","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","async","process","id","Authorization","token","onDelete","err","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","openMapHandler","userId","creatorId","to","showDeleteWarningHandler","items","length","place","PlaceItem","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responeData","places","fetchPlaces","PlaceList","deletedPlaceId","prevPlaces","filter","href","size","Link","exact","type","disabled","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useCallback","url","method","arguments","undefined","body","headers","httpAbortCntrl","AbortController","push","response","fetch","signal","responseData","json","reqCtrl","ok","Error","message","forEach","abortCntrl","abort"],"sourceRoot":""}