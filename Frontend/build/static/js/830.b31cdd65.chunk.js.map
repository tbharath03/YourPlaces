{"version":3,"file":"static/js/830.b31cdd65.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport {\n    VALIDATOR_MINLENGTH,\n    VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\n\nimport \"./PlaceForm.css\";\n\nconst UpdatePlace = () => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [identifiedPlace, setIdentifiedPlace] = useState();\n    const placeId = useParams().placeId;\n\n    // const identifiedPlace = DUMMY_PLACES.find((p) => p.id === placeId);\n\n    const [formState, inputHandler, setFormData] = useForm(\n        {\n            title: {\n                value: \"\",\n                isValid: false,\n            },\n            description: {\n                value: \"\",\n                isValid: false,\n            },\n            address: {\n                value: \"\",\n                isValid: false,\n            },\n            coordinate_lat: {\n                value: \"\",\n                isValid: false,\n            },\n            coordinate_lng: {\n                value: \"\",\n                isValid: false,\n            },\n        },\n        false\n    );\n\n    useEffect(() => {\n        const fetchPlace = async () => {\n            try {\n                const responeData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n                );\n                setIdentifiedPlace(responeData.place);\n                setFormData(\n                    {\n                        title: {\n                            value: responeData.place.title,\n                            isValid: true,\n                        },\n                        description: {\n                            value: responeData.place.description,\n                            isValid: true,\n                        },\n                        address: {\n                            value: responeData.place.address,\n                            isValid: true,\n                        },\n                        coordinate_lat: {\n                            value: responeData.place.location.lat,\n                            isValid: true,\n                        },\n                        coordinate_lng: {\n                            value: responeData.place.location.lng,\n                            isValid: true,\n                        },\n                    },\n                    true\n                );\n            } catch (err) {}\n        };\n        fetchPlace();\n    }, [sendRequest, placeId, setFormData]);\n\n    const history = useHistory();\n    const placeUpdateSubmitHandler = async (event) => {\n        event.preventDefault();\n        try {\n            await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n                \"PATCH\",\n                JSON.stringify({\n                    title: formState.inputs.title.value,\n                    description: formState.inputs.description.value,\n                    address: formState.inputs.address.value,\n                    coordinate_lat: formState.inputs.coordinate_lat.value,\n                    coordinate_lng: formState.inputs.coordinate_lng.value,\n                }),\n                {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + auth.token,\n                }\n            );\n            history.push(\"/\" + auth.userId + \"/places\");\n        } catch (err) {}\n    };\n\n    if (isLoading) {\n        return (\n            <div className=\"center\">\n                <LoadingSpinner />\n            </div>\n        );\n    }\n\n    if (!identifiedPlace && !error) {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>Could not find place!</h2>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <ErrorModal error={error} onClear={clearError} />\n            {!isLoading && identifiedPlace && (\n                <form\n                    className=\"place-form\"\n                    onSubmit={placeUpdateSubmitHandler}\n                >\n                    <Input\n                        id=\"title\"\n                        element=\"input\"\n                        type=\"text\"\n                        label=\"Title\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter a valid title!\"\n                        onInput={inputHandler}\n                        initialValue={identifiedPlace.title}\n                        initialValid={true}\n                    />\n                    <Input\n                        id=\"description\"\n                        element=\"textarea\"\n                        label=\"Description\"\n                        validators={[VALIDATOR_MINLENGTH(5)]}\n                        errorText=\"Please enter a valid description(atleat 5 characters)!\"\n                        onInput={inputHandler}\n                        initialValue={identifiedPlace.description}\n                        initialValid={true}\n                    />\n                    <Input\n                        id=\"address\"\n                        element=\"input\"\n                        type=\"text\"\n                        label=\"Address\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter a valid address!\"\n                        onInput={inputHandler}\n                        initialValue={identifiedPlace.address}\n                        initialValid={true}\n                    />\n                    <Input\n                        id=\"coordinate_lat\"\n                        element=\"input\"\n                        type=\"text\"\n                        label=\"latitude\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter a valid latitude!\"\n                        onInput={inputHandler}\n                        initialValue={identifiedPlace.location.lat}\n                        initialValid={true}\n                    />\n                    <Input\n                        id=\"coordinate_lng\"\n                        element=\"input\"\n                        type=\"text\"\n                        label=\"longitude\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter a valid longitude!\"\n                        onInput={inputHandler}\n                        initialValue={identifiedPlace.location.lng}\n                        initialValid={true}\n                    />\n                    <Button type=\"submit\" disabled={!formState.isValid}>\n                        UPDATE PLACE\n                    </Button>\n                </form>\n            )}\n        </>\n    );\n};\nexport default UpdatePlace;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n    if (props.href) {\n        return (\n            <a\n                className={`button button--${props.size || \"default\"} ${\n                    props.inverse && \"button--inverse\"\n                } ${props.danger && \"button--danger\"}`}\n                href={props.href}\n            >\n                {props.children}\n            </a>\n        );\n    }\n    if (props.to) {\n        return (\n            <Link\n                to={props.to}\n                exact={props.exact}\n                className={`button button--${props.size || \"default\"} ${\n                    props.inverse && \"button--inverse\"\n                } ${props.danger && \"button--danger\"}`}\n            >\n                {props.children}\n            </Link>\n        );\n    }\n    return (\n        <button\n            className={`button button--${props.size || \"default\"} ${\n                props.inverse && \"button--inverse\"\n            } ${props.danger && \"button--danger\"}`}\n            type={props.type}\n            onClick={props.onClick}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React, {useEffect, useReducer} from \"react\";\n\nimport { validate } from \"../../util/validators\";\n\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n    switch(action.type) {\n        case 'CHANGE' : \n            return {\n                ...state,\n                value : action.val,\n                isValid : validate(action.val, action.validators)\n            }\n        case 'TOUCH' :\n            return {\n                ...state,\n                isTouched : true\n            }\n        default :\n            return state;\n    }\n}\n\nconst Input = props => {\n    const [inputState, dispatch ] = useReducer(inputReducer , {value : props.initialValue || '', isTouched : false ,isValid : props.initialValid || false});\n\n    const {id,onInput} = props;\n    const {value,isValid} = inputState;\n\n    useEffect(() => {\n        onInput(id,value,isValid)\n    },[id,value,isValid,onInput]);\n\n\n    // const [enteredValue, setEnteredValue] = useState('');\n    // const [isValid, setIsValid] = useState(false);\n    const changeHandler = event => {\n        dispatch({type : 'CHANGE', val : event.target.value, validators : props.validators});\n    }\n\n    const touchHandler = () => {\n        dispatch({type : 'TOUCH'});\n    }\n\n    const element = props.element === 'input' ? (\n        <input id={props.id} type={props.type} placeholder={props.placeholder} onChange={changeHandler} value={inputState.value} onBlur={touchHandler}/>\n    ) : <textarea id = {props.id} rows={props.row || 3} onChange={changeHandler} value={inputState.value} onBlur={touchHandler}/>;\n\n    return <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n        <label htmlFor={props.id}>{props.label}</label>\n        {element}\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n};\n\nexport default Input;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport {CSSTransition} from 'react-transition-group';\n\nimport Backdrop from \"./Backdrop\";\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : event => event.preventDefault()}>\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n                <footer className={`modal__footer ${props.footerClass}`}>\n                    {props.footer}\n                </footer>\n            </form>\n        </div>\n    );\n\n    return ReactDOM.createPortal(content,document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = props => {\n    return <>\n        {props.show && <Backdrop onClick = {props.onCancel}/>}\n        <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\n            <ModalOverlay {...props}/>\n        </CSSTransition>\n    </>\n};\n\nexport default Modal;","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case \"INPUT_CHANGE\":\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n                if (!state.inputs[inputId]) {\n                    continue;\n                }\n                if (inputId === action.isValid) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: {\n                        value: action.value,\n                        isValid: action.isValid,\n                    },\n                },\n                isValid: formIsValid,\n            };\n        case \"SET_DATA\":\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity,\n    });\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: \"INPUT_CHANGE\",\n            value: value,\n            isValid: isValid,\n            inputId: id,\n        });\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: \"SET_DATA\",\n            inputs: inputData,\n            formIsValid: formValidity,\n        });\n    }, []);\n\n    return [formState, inputHandler, setFormData];\n};\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState();\n    const activeHttpRequests = useRef([]);\n\n    const sendRequest = useCallback(\n        async (url, method = \"GET\", body = null, headers = {}) => {\n            setIsLoading(true);\n            const httpAbortCntrl = new AbortController();\n            activeHttpRequests.current.push(httpAbortCntrl);\n            try {\n                const response = await fetch(url, {\n                    method,\n                    body,\n                    headers,\n                    signal: httpAbortCntrl.signal,\n                });\n\n                const responseData = await response.json();\n\n                activeHttpRequests.current = activeHttpRequests.current.filter(\n                    (reqCtrl) => reqCtrl !== httpAbortCntrl\n                );\n\n                if (!response.ok) {\n                    throw new Error(responseData.message);\n                }\n                setIsLoading(false);\n                return responseData;\n            } catch (err) {\n                setError(err.message);\n                setIsLoading(false);\n                throw err;\n            }\n        },\n        []\n    );\n    const clearError = () => {\n        setError(null);\n    };\n\n    useEffect(() => {\n        return () => {\n            activeHttpRequests.current.forEach((abortCntrl) =>\n                abortCntrl.abort()\n            );\n        };\n    }, []);\n\n    return { isLoading, error, sendRequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["UpdatePlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","identifiedPlace","setIdentifiedPlace","useState","placeId","useParams","formState","inputHandler","setFormData","useForm","title","value","isValid","description","address","coordinate_lat","coordinate_lng","useEffect","async","responeData","concat","process","place","location","lat","lng","err","fetchPlace","history","useHistory","_jsx","className","children","LoadingSpinner","_jsxs","_Fragment","ErrorModal","onClear","onSubmit","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","props","href","size","inverse","danger","to","Link","exact","onClick","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","row","htmlFor","style","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","useRef","url","method","arguments","length","undefined","body","headers","httpAbortCntrl","AbortController","current","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","forEach","abortCntrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}